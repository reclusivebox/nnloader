// Generated by dts-bundle v0.7.3

declare class NoPackageError extends Error {
}
declare type EncodingOptions = "ascii" | "utf8" | "utf-8" | "utf16le" | "ucs2" | "ucs-2" | "base64" | "latin1" | "binary" | "hex";
/**
    * Returns the absolute path to the directory containing the package.json file.
    * @param {string} dirname - The directory containing the file calling this function, aways use the node variable __diname.
    */
declare function getPackageDir(dirname: string): Promise<string>;
/**
    * Loads a string inside a file
    * @param {string} pathToFile - the path of the file to be loaded, relative to the package root.
    * @param {string} moduleDir - the absulute path of the file calling this function, aways use the node variable __dirname.
    * @param {EncodingOptions} encoding - the encoding of the file to load, the default is utf-8.
    */
declare function loadString(pathToFile: string, moduleDir: string, encoding?: EncodingOptions): Promise<string>;
declare const _default: {
        NoPackageError: typeof NoPackageError;
        getPackageDir: typeof getPackageDir;
        loadString: typeof loadString;
};
export default _default;

