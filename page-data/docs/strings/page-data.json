{"componentChunkName":"component---src-templates-markdown-tsx","path":"/docs/strings","result":{"data":{"markdownRemark":{"html":"<h2>Loading strings</h2>\n<p>To load the content of your file as a string you have to use the method <code class=\"language-typescript\">nnLoader<span class=\"token punctuation\">.</span><span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></code>. This is an asynchronous method that takes as an argument the path to your file relative to the package root and returns a promise to a string with the fileâ€™s content. Additionally you can pass a second argument with the encoding of your string.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> nnLoader <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nnloader'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> myFileContent <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> nnLoader<span class=\"token punctuation\">.</span><span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/files/myFile.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The supported values for the encoding argument are: <code class=\"language-text\">utf-8</code>, <code class=\"language-text\">utf8</code>, <code class=\"language-text\">ascii</code>, <code class=\"language-text\">ucs2</code>, <code class=\"language-text\">ucs-2</code>, <code class=\"language-text\">utf16le</code>, <code class=\"language-text\">base64</code>, <code class=\"language-text\">latin1</code>, <code class=\"language-text\">binary</code> and <code class=\"language-text\">hex</code>.</p>","frontmatter":{"id":2}},"allMarkdownRemark":{"nodes":[{"frontmatter":{"id":1,"path":"/docs/start","title":"Get Started"}},{"frontmatter":{"id":2,"path":"/docs/strings","title":"Loading strings"}},{"frontmatter":{"id":3,"path":"/docs/json","title":"Loading JSON files"}},{"frontmatter":{"id":4,"path":"/docs/buffer","title":"Loading as a Buffer"}}]}},"pageContext":{"id":2}},"staticQueryHashes":[]}